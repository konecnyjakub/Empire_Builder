# wmllint: no translatables

#define CALCULATE_GOLD_INCOME
  {VARIABLE gold_income 0}
  [store_unit]
    [filter]
      side=$side_number
      type=Town_Hall
    [/filter]
    variable=cities1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=City_Hall
    [/filter]
    variable=cities2
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=Tower_House
    [/filter]
    variable=cities3
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=Castle
    [/filter]
    variable=cities4
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=GoldMine1
    [/filter]
    variable=goldmines1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=GoldMine2
    [/filter]
    variable=goldmines2
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=Market
    [/filter]
    variable=market
  [/store_unit]
  [if]
    [variable]
      name=cities1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $cities1.length (
        [if]
          [variable]
            name=player_technologies[$side_number].economy
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 3}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 2}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=cities2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $cities2.length (
        [if]
          [variable]
            name=player_technologies[$side_number].economy
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 5}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 4}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=cities3.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $cities3.length (
        [if]
          [variable]
            name=player_technologies[$side_number].economy
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 8}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 6}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=cities4.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $cities4.length (
        [if]
          [variable]
            name=player_technologies[$side_number].economy
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 13}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 10}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=goldmines1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $goldmines1.length (
        [if]
          [variable]
            name=player_technologies[$side_number].mining
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 2}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 1}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=goldmines2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $goldmines2.length (
        [if]
          [variable]
            name=player_technologies[$side_number].mining
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP gold_income add 3}
          [/then]
          [else]
            {VARIABLE_OP gold_income add 2}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=market.length
      greater_than=0
    [/variable]
    [then]
      {VARIABLE_OP gold_income add 5}
    [/then]
  [/if]
  [if]
    [variable]
      name=player_technologies[$side_number].trading_routes
      equals=yes
    [/variable]
    [then]
      [store_locations]
        terrain=Re,Rr,Rrc,Rp
          #[filter]
            #race=buildings
            #side=$side_number
            #[filter_location]
               #radius=2
            #[/filter_location]
        #[/filter]
        variable=roads
      [/store_locations]
      {FOREACH roads i}
        [if]
          [have_unit]
            race=buildings
            side=$side_number
            [filter_location]
              x,y=$roads[$i].x,$roads[$i].y
              radius=2
            [/filter_location]
          [/have_unit]
          [else]
            {CLEAR_VARIABLE roads[$i]}
            {VARIABLE_OP i sub 1}
          [/else]
        [/if]
      {NEXT i}
      [set_variable]
        name=roads_income
        to_variable=roads.length
      [/set_variable]
      [set_variable]
        name=roads_income
        divide=5
        round=floor
      [/set_variable]
      [if]
        [variable]
          name=roads_income
          greater_than=0
        [/variable]
        [then]
          {VARIABLE_OP gold_income add $roads_income}
        [/then]
      [/if]
    [/then]
  [/if]
  {CLEAR_VARIABLE cities1,cities2,cities3,cities4,goldmines1,goldmines2,roads,roads_income}
#enddef

#define CALCULATE_GOLD_EXPENSES
  {VARIABLE gold_expenses 0}
  [store_unit]
    [filter]
      side=$side_number
      canrecruit=no
      [not]
        race=buildings
      [/not]
    [/filter]
    variable=side_units
  [/store_unit]
  {FOREACH side_units i}
    [if]
      [variable]
        name=side_unit[$i].variables.hero
        not_equals=yes
      [/variable]
      [then]
        {VARIABLE_OP gold_expenses add $side_units[$i].level}
      [/then]
    [/if]
  {NEXT i}
  {CLEAR_VARIABLE side_units}
#enddef

#define CALCULATE_FOOD_INCOME
  {VARIABLE food_income 0}
  [store_unit]
    [filter]
      side=$side_number
      type=Farm1
    [/filter]
    variable=farms1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=Farm2
    [/filter]
    variable=farms2
  [/store_unit]
  [if]
    [variable]
      name=farms1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $farms1.length (
        [if]
          [variable]
            name=player_technologies[$side_number].farming
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP food_income add 4}
          [/then]
          [else]
            {VARIABLE_OP food_income add 3}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=farms2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $farms2.length (
        [if]
          [variable]
            name=player_technologies[$side_number].farming
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP food_income add 7}
          [/then]
          [else]
            {VARIABLE_OP food_income add 5}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  {CLEAR_VARIABLE farms1,farms2}
#enddef

#define CALCULATE_FOOD_EXPENSES
  {VARIABLE food_expenses 0}
  [store_unit]
    [filter]
      side=$side_number
      canrecruit=no
      [not]
        race=buildings
      [/not]
    [/filter]
    variable=side_units
  [/store_unit]
  {FOREACH side_units i}
    {VARIABLE_OP food_expenses add $side_units[$i].level}
  {NEXT i}
  {CLEAR_VARIABLE side_units}
#enddef

#define CALCULATE_WOOD_INCOME
  {VARIABLE wood_income 0}
  [store_unit]
    [filter]
      side=$side_number
      type=Woodcutter1
    [/filter]
    variable=woodcutters1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=Woodcutter2
    [/filter]
    variable=woodcutters2
  [/store_unit]
  [if]
    [variable]
      name=woodcutters1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $woodcutters1.length (
        {VARIABLE_OP wood_income add 1}
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=woodcutters2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $woodcutters2.length (
        {VARIABLE_OP wood_income add 2}
      )}
    [/then]
  [/if]
  {CLEAR_VARIABLE woodcutters1,woodcutters2}
#enddef

#define CALCULATE_ORE_INCOME
  {VARIABLE ore_income 0}
  [store_unit]
    [filter]
      side=$side_number
      type=OreMine1
    [/filter]
    variable=oremines1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=OreMine2
    [/filter]
    variable=oremines2
  [/store_unit]
  [if]
    [variable]
      name=oremines1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $oremines1.length (
        [if]
          [variable]
            name=player_technologies[$side_number].mining
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP ore_income add 2}
          [/then]
          [else]
            {VARIABLE_OP ore_income add 1}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=oremines2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $oremines2.length (
        [if]
          [variable]
            name=player_technologies[$side_number].mining
            equals=yes
          [/variable]
          [then]
            {VARIABLE_OP ore_income add 3}
          [/then]
          [else]
            {VARIABLE_OP ore_income add 2}
          [/else]
        [/if]
      )}
    [/then]
  [/if]
  {CLEAR_VARIABLE oremines1,oremines2}
#enddef

#define CALCULATE_RESEARCH_POINTS_INCOME
  {VARIABLE rp_income 0}
  [store_unit]
    [filter]
      side=$side_number
      type=School
    [/filter]
    variable=schools1
  [/store_unit]
  [store_unit]
    [filter]
      side=$side_number
      type=University
    [/filter]
    variable=schools2
  [/store_unit]
  [if]
    [variable]
      name=schools1.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $schools1.length (
        {VARIABLE_OP rp_income add 2}
      )}
    [/then]
  [/if]
  [if]
    [variable]
      name=schools2.length
      greater_than=0
    [/variable]
    [then]
      {REPEAT $schools2.length (
        {VARIABLE_OP rp_income add 5}
      )}
    [/then]
  [/if]
  {CLEAR_VARIABLE schools1,schools2}
#enddef

#define CALCULATE_PRODUCTION
  {CALCULATE_GOLD_INCOME}
  {CALCULATE_GOLD_EXPENSES}
  {CALCULATE_FOOD_INCOME}
  {CALCULATE_FOOD_EXPENSES}
  {CALCULATE_WOOD_INCOME}
  {CALCULATE_ORE_INCOME}
  {CALCULATE_RESEARCH_POINTS_INCOME}
  [set_variable]
    name=net_gold_income
    to_variable=gold_income
  [/set_variable]
  {VARIABLE_OP net_gold_income sub $gold_expenses}
  [set_variable]
    name=net_food_income
    to_variable=food_income
  [/set_variable]
  {VARIABLE_OP net_food_income sub $food_expenses}
#enddef

#define CALCULATE_PRODUCTION_CLEAN
  {CLEAR_VARIABLE gold_income,gold_expenses,net_gold_income,food_income,food_expenses,net_food_income,wood_income,ore_income,rp_income}
#enddef

#define EB_SIDE_ECONOMY
  [event]
    name=side turn
    first_time_only=no
    [filter_condition]
      [variable]
        name=turn_number
        greater_than=1
      [/variable]
    [/filter_condition]
    [store_gold]
      side=$side_number
      variable=upkeep_mitigation_gold_container
    [/store_gold]
    [event]
      name=turn refresh
      [modify_side]
        side=$side_number
        gold=$upkeep_mitigation_gold_container
      [/modify_side]
      {CLEAR_VARIABLE upkeep_mitigation_gold_container}
      {CALCULATE_PRODUCTION}
      [gold]
        side=$side_number
        amount=$net_gold_income
      [/gold]
      {VARIABLE_OP player_resources[$side_number].food add $net_food_income}
      {VARIABLE_OP player_resources[$side_number].ore add $ore_income}
      {VARIABLE_OP player_resources[$side_number].wood add $wood_income}
      {VARIABLE_OP player_resources[$side_number].rp add $rp_income}
      [if]
        [variable]
          name=player_resources[$side_number].food
          less_than=0
        [/variable]
        [then]
          [store_unit]
            [filter]
              side=$side_number
              canrecruit=no
              [not]
                race=buildings
                level=0
              [/not]
            [/filter]
            variable=starving_store
          [/store_unit]
          {VARIABLE_OP player_resources[$side_number].food multiply -1}
          [harm_unit]
            [filter]
              find_in=starving_store
            [/filter]
            amount=$player_resources[$side_number].food
          [/harm_unit]
          {VARIABLE player_resources[$side_number].food 0}
          {CLEAR_VARIABLE starving_store}
        [/then]
      [/if]
      {CALCULATE_PRODUCTION_CLEAN}
    [/event]
  [/event]
#enddef
